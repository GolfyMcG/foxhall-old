var marker_data = $("#community-map").data("markers");
$(function() {
  // ***************************
  // ** Produce Community Map **
  // ***************************
  var map;
  function initialize() {
    var mapOptions = {
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      scrollwheel: false
    };

    map = new google.maps.Map(document.getElementById('community-map'),
        mapOptions);

    var LatLngList = new Array();
    var bounds = new google.maps.LatLngBounds();
    var logoIcon = "<%= asset_path('map_logo.png') %>";

    for(var i = 0; i < marker_data.length; i++) {

      LatLngList.push(new google.maps.LatLng (marker_data[i]['latitude'], marker_data[i]['longitude']));
      bounds.extend (LatLngList[i]);

      var marker = new google.maps.Marker({
        position: LatLngList[i],
        map: map,
        title: marker_data[i]['name'],
        icon: logoIcon
      });

      var descriptionString = marker_data[i]['description'];
      if (descriptionString.length > 150 ) {
        descriptionString = descriptionString.substring(0,149)+"...";
      }
      var contentString = 
        '<div class="infoWindow">' +
          '<h1>' +
            marker_data[i]['name'] +
          '</h1>' +
          '<p class="infoAddress">' +
            marker_data[i]['full_address'] +
          '</p>' +
          '<p class="infoDescription">' +
            descriptionString +
          '</p>' +
        '</div>';
      var infoWindow = new google.maps.InfoWindow;

      bindInfoWindow(marker, contentString, infoWindow);
    };
    function bindInfoWindow(marker, contentString, infoWindow) {
      google.maps.event.addListener(marker, 'click', function() {
        infoWindow.setContent(contentString);
        infoWindow.open(map, marker);
      });
    }
    map.fitBounds(bounds);

  }

  initialize();

  // **********************************
  // ** ScrollTo Function for header **
  // **********************************
  $('a[href^="#"]').on('click', function (e) {
      e.preventDefault();
      var target = this.hash,
      $target = $(target);
      $('html, body').stop().animate(
        { 'scrollTop': $target.offset().top },
        800,
        'swing',
        function() { window.location.hash = target; }
      );
  });

  // **********************************
  // ** Lock header to top on scroll **
  // **********************************
  var docked = false;
  var menu = $('nav');
  var navHeight = menu.height();
  var heroHeight = $('#hero').height();
  var placeholder = $("#nav-placeholder");
  placeholder.height(navHeight);
  var init = menu.offset().top;

  $(window).scroll(function() {
    if (!docked && (menu.offset().top - $("body").scrollTop() < 0)) {
      menu.addClass("fixed");
      placeholder.removeClass("fixed");
      docked = true;
    }
    else if(docked && $("body").scrollTop() <= init) {
      menu.removeClass("fixed");
      placeholder.addClass("fixed");
      docked = false;
    }
    if ($("body").scrollTop() + navHeight >= heroHeight) {
      $('#content .wrapper article').each(function(i) {
        if ($(this).position().top <= $("body").scrollTop() - navHeight) {
            $('nav li.active').removeClass('active');
            $('nav li').eq(i+1).addClass('active');
        }
      });
    } else {
      $('nav li.active').removeClass('active');
      $('nav li:first').addClass('active');
    }
  });

  // ********************************
  // ** Hide/Show Collection Homes **
  // ********************************
  $('.collection-icon').click(function(){
    $('.home-list').removeClass('active-list');
    $('.collection-icon').removeClass('active-icon');
    $(this).addClass('active-icon');
    var active_tab = $(this).data('tab');
    $(active_tab).addClass('active-list');
  });

});
